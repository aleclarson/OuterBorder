// Generated by CoffeeScript 1.11.1
var AnimatedValue, Device, Element, ReactComponent, Style, View, getValue, hexToRgb, isType, ref, type;

ref = require("react-validators"), Style = ref.Style, Element = ref.Element;

AnimatedValue = require("Animated").AnimatedValue;

ReactComponent = require("modx/lib/Component");

hexToRgb = require("hex-rgb");

Device = require("modx/lib/Device");

isType = require("isType");

View = require("modx/lib/View");

type = ReactComponent("OuterBorder");

type.defineProps({
  style: Style,
  child: Element,
  width: Number.withDefault(1 / Device.scale),
  color: String.withDefault("#000"),
  opacity: Number.withDefault(1),
  radius: Number
});

type.defineReactions({
  _borderColor: function() {
    var opacity, rgb;
    rgb = hexToRgb(getValue(this.props.color)).join(",");
    opacity = getValue(this.props.opacity);
    return "rgba(" + rgb + ", " + opacity + ")";
  },
  _borderRadius: function() {
    var radius, width;
    width = getValue(this.props.width);
    radius = getValue(this.props.radius);
    return radius + width;
  }
});

type.render(function() {
  var style;
  style = {
    borderColor: this._borderColor,
    borderRadius: this._borderRadius,
    borderWidth: this.props.width
  };
  return View({
    style: [this.props.style, style],
    children: this.props.child
  });
});

module.exports = type.build();

getValue = function(x) {
  if (isType(x, AnimatedValue)) {
    return x.get();
  } else {
    return x;
  }
};
